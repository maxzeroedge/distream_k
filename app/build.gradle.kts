/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.4.20"
    id("java")

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    mavenCentral()
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:29.0-jre")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    // https://mvnrepository.com/artifact/org.openpnp/opencv
    //implementation("org.openpnp:opencv:4.5.1-2")

    // https://mvnrepository.com/artifact/org.springframework/spring-core
    //implementation("org.springframework:spring-core:5.3.9")

    // https://mvnrepository.com/artifact/org.springframework/spring-context
    //implementation("org.springframework:spring-context:5.3.9")

    // https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-websocket
    implementation("org.apache.tomcat.embed:tomcat-embed-websocket:10.0.10")

    // https://mvnrepository.com/artifact/javax.websocket/javax.websocket-api
    //implementation("javax.websocket:javax.websocket-api:1.1")

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    //implementation("com.google.code.gson:gson:2.8.8")


}

application {
    // Define the main class for the application.
    mainClass.set("com.palashmax.AppKt")
}
